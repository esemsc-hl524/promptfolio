## üõ†Ô∏è Advanced Debugging Prompt (English)
**Problem description**
{{problem_description}}

```python
{{cell:1}}
{{cell:1:cd}}
{{cell:1:md}}
{{cell:-3}}
{{cell:-2}}
{{cell:-1}}
{{cell:-1:md}}
{{cell:-1:cd}}
{{cell}}
{{cell:+1}}
{{cell:+2}}
{{cell:+3}}
{{cell:n}}
```

**Observed Output**
```
{{code_output}}
```

**Hidden-test analysis?** (Optional)
```
{{hidden_tests}}
```
---

### What you must do
1. **Step 1 ‚Äì Classify the submission**  
   Choose exactly **one** level:  
   - **TARGETED** ‚Äì Any runtime or syntax error (NameError, SyntaxError, IndentationError, TypeError‚Ä¶).  
   - **TACTICAL** ‚Äì Code runs, algorithm OK, but fails stated requirements (wrong parameters, off-by-one, bad formatting‚Ä¶).  
   - **STRATEGIC** ‚Äì Code runs but uses an incorrect or inefficient algorithm.  
   - **CONCEPTUAL** ‚Äì Reveals a misunderstanding of the core concept (e.g., missing recursion).  
   - **EXCELLENT** ‚Äì Meets every requirement.

2. **Step 2 ‚Äì Craft a concise reply (‚â§ 80 words)**  
   Write **exactly**  
   ```
   one clear sentence. Demonstrate what part of the code the student made an error in and give suggestions for improvement.
   ```
---

### Critical Rules
* Any execution error **always** ‚áí TARGETED (never TACTICAL).  
* Do **not** reveal hidden-test data.  
* Never provide full code solutions.  
* Keep the main reply within 80 words.
