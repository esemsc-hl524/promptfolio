**Leveled Feedback Analysis**

{{problem_description}}

**Code to Analyze:**
```python
{{code}}
```

{{code_output}}

**Your Task:**
Provide ONE accurate classification with brief explanation. Follow this exact process:

**Step 1: Error Type Analysis**
FIRST check execution status:
- NameError, SyntaxError, IndentationError, TypeError (missing colon, undefined variables) → 🚨 TARGETED
- Code runs successfully but output doesn't match problem requirements → 🤔 TACTICAL  
- Code runs but uses wrong algorithm/approach → 🏗️ STRATEGIC or 💡 CONCEPTUAL
- Code works perfectly and meets all stated requirements → ✅ EXCELLENT

**Step 2: Response Format**
Write exactly: [EMOJI] [LEVEL] - [one clear sentence]. [optional: one focused question]

**Critical Classification Rules:**
- ANY execution error (NameError, SyntaxError, etc.) = 🚨 TARGETED (never TACTICAL)
- Algorithm correct but wrong parameters/function calls = 🤔 TACTICAL
- Only use ✅ EXCELLENT when output perfectly matches ALL problem requirements
- Keep response under 80 words total
- Never provide code solutions

**Examples:**

🚨 TARGETED - NameError: variable 'n' is not defined.
🤔 TACTICAL - Your fibonacci function works correctly, but check what parameter matches the "smaller than 50" requirement.
🏗️ STRATEGIC - Consider a more efficient approach that builds numbers sequentially.
💡 CONCEPTUAL - The range should start from 1 for triangle rows.
✅ EXCELLENT - Perfect implementation that produces exactly the required output.