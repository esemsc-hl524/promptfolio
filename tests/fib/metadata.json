{
  "id": "fib",
  "title": "Fibonacci Sequence",
  "description": "Implement a Fibonacci sequence function fib(n) that returns the nth Fibonacci number",
  "difficulty": "easy",
  "tags": ["recursion", "math", "functions"],
  "function_name": "fib",
  "function_signature": "def fib(n: int) -> int:",
  "requirements": [
    "Function must accept an integer parameter n",
    "Return the nth Fibonacci number",
    "fib(0) = 0, fib(1) = 1",
    "For n > 1, fib(n) = fib(n-1) + fib(n-2)"
  ],
  "test_cases": [
    {
      "input": 0,
      "expected": 0,
      "description": "Base case: fib(0) should return 0"
    },
    {
      "input": 1,
      "expected": 1,
      "description": "Base case: fib(1) should return 1"
    },
    {
      "input": 2,
      "expected": 1,
      "description": "Recursive case: fib(2) should return 1"
    },
    {
      "input": 5,
      "expected": 5,
      "description": "Recursive case: fib(5) should return 5"
    },
    {
      "input": 10,
      "expected": 55,
      "description": "Large number: fib(10) should return 55"
    }
  ],
  "hints": [
    "Consider using recursion or iteration",
    "Pay attention to base cases (n=0, n=1)",
    "Ensure the function can handle larger input values"
  ],
  "learning_objectives": [
    "Understand recursion concepts",
    "Master function definition and calling",
    "Learn to handle boundary conditions"
  ]
} 